package com.korea.attendance.repository;

import com.korea.attendance.model.*;
import org.apache.ibatis.annotations.*;

import java.util.List;

@Mapper
public interface SurveyMapper {

    /** ✅ 특정 강의실의 모든 설문조사 게시판 목록 조회 */
    @Select("""
        SELECT board_id AS boardId, class_id AS classId
        FROM survey_board 
        WHERE class_id = #{classId} 
        ORDER BY board_id ASC
    """)
    List<SurveyBoard> findSurveyBoardsByClassId(@Param("classId") int classId);

    /** ✅ 설문조사 게시판 생성 */
    @Insert("INSERT INTO survey_board (class_id) VALUES (#{classId})")
    void createSurveyBoard(@Param("classId") int classId);

    /** ✅ 특정 강의실의 단일 설문조사 게시판 조회 */
    @Select("SELECT board_id AS boardId, class_id AS classId FROM survey_board WHERE class_id = #{classId} LIMIT 1")
    SurveyBoard getSurveyBoardByClassId(@Param("classId") int classId);

    /** ✅ 설문조사 생성 */
    @Insert("""
        INSERT INTO survey_post (board_id, title, start_time, end_time) 
        VALUES (#{boardId}, #{title}, #{startTime}, #{endTime})
    """)
    @Options(useGeneratedKeys = true, keyProperty = "surveyId") // ✅ 자동 생성된 surveyId 반환
    void createSurveyPost(SurveyPost surveyPost);

    /** ✅ 특정 게시판의 설문조사 목록 조회 */
    @Select("SELECT * FROM survey_post WHERE board_id = #{boardId} ORDER BY created_at DESC")
    List<SurveyPost> getSurveyPostsByBoardId(@Param("boardId") int boardId);

    /** ✅ 설문 질문 추가 (SurveyQuestion 객체를 직접 받을 수 있도록 수정) */
    @Insert("INSERT INTO survey_question (survey_id, question_text, question_type) VALUES (#{survey.surveyId}, #{survey.questionText}, #{survey.questionType})")
    void createSurveyQuestion(@Param("survey") SurveyQuestion survey);
    
    /** ✅ 특정 설문조사의 질문 조회 */
    @Select("SELECT * FROM survey_question WHERE survey_id = #{surveyId}")
    List<SurveyQuestion> getSurveyQuestionsBySurveyId(@Param("surveyId") int surveyId);

    /** ✅ 설문 응답 저장 (SurveyResponse 객체를 직접 받을 수 있도록 수정) */
    @Insert("INSERT INTO survey_response (question_id, student_id, response_value) VALUES (#{response.questionId}, #{response.studentId}, #{response.responseValue})")
    void saveSurveyResponse(@Param("response") SurveyResponse response);
    /** ✅ 특정 설문조사의 응답 조회 */
    @Select("""
        SELECT sr.* FROM survey_response sr 
        JOIN survey_question sq ON sr.question_id = sq.question_id 
        WHERE sq.survey_id = #{surveyId}
    """)
    List<SurveyResponse> getSurveyResponsesBySurveyId(@Param("surveyId") int surveyId);
}
