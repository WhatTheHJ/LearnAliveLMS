package com.korea.attendance.repository;

import com.korea.attendance.model.Attendance;
import org.apache.ibatis.annotations.*;

import java.util.List;

@Mapper
public interface AttendanceMapper {

    // ✅ 특정 강의실의 특정 날짜 출석 기록 조회
	@Select("""
		    SELECT 
		        a.attendance_id AS attendanceId,
		        s.student_id AS studentId, 
		        s.name AS name, 
		        c.class_id AS classId, 
		        c.class_name AS className, 
		        IFNULL(a.date, #{date}) AS date, 
		        IFNULL(a.state, 'absent') AS state, 
		        a.reason, 
		        IFNULL(a.created_at, '미등록') AS createdAt, 
		        IFNULL(a.updated_at, '미등록') AS updatedAt
		    FROM Student s
		    LEFT JOIN Attendance a 
		        ON s.student_id = a.student_id 
		        AND a.class_id = #{classId} 
		        AND a.date = #{date}
		    JOIN Class c ON c.class_id = #{classId}
		    WHERE s.class_id = #{classId}
		""")
		@Results({
		    @Result(property = "attendanceId", column = "attendanceId"),
		    @Result(property = "studentId", column = "studentId"),
		    @Result(property = "name", column = "name"),
		    @Result(property = "classId", column = "classId"),
		    @Result(property = "className", column = "className"),
		    @Result(property = "date", column = "date"),
		    @Result(property = "state", column = "state"),
		    @Result(property = "reason", column = "reason"),
		    @Result(property = "createdAt", column = "createdAt"),
		    @Result(property = "updatedAt", column = "updatedAt")
		})
		List<Attendance> findAttendanceByClassAndDate(@Param("classId") int classId, @Param("date") String date);

    // 출석 상태(state) 업데이트
    @Update("""
        UPDATE Attendance 
        SET state = #{state}, updated_at = NOW()
        WHERE attendance_id = #{attendanceId}
    """)
    void updateAttendanceState(@Param("attendanceId") Integer attendanceId, @Param("state") String state);

    // 출석 사유(reason) 업데이트
    @Update("""
        UPDATE Attendance 
        SET reason = #{reason}, updated_at = NOW()
        WHERE attendance_id = #{attendanceId}
    """)
    void updateAttendanceReason(@Param("attendanceId") Integer attendanceId, @Param("reason") String reason);

    // 출석 기록 삭제
    @Delete("DELETE FROM Attendance WHERE attendance_id = #{attendanceId}")
    void deleteAttendance(@Param("attendanceId") int attendanceId);
}
