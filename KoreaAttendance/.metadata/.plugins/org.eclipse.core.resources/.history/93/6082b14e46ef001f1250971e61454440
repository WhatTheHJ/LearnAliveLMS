package com.korea.attendance.repository;

import com.korea.attendance.model.Attendance;
import org.apache.ibatis.annotations.*;

import java.util.List;

@Mapper
public interface AttendanceMapper {

	@Select("""
		    SELECT 
		        COALESCE(a.attendance_id, 0) AS attendance_id, -- ✅ 출석 기록이 없는 경우 기본값 0으로 설정
		        s.student_id, -- ✅ student_id가 null이 되지 않도록 유지
		        s.name, 
		        c.class_id, 
		        c.class_name, 
		        COALESCE(a.date, #{date}) AS date, -- ✅ 출석 기록이 없으면 현재 선택된 날짜 사용
		        COALESCE(a.state, 'absent') AS state, -- ✅ 출석 기록이 없으면 기본값 'absent' 설정
		        COALESCE(a.reason, '미등록') AS reason, -- ✅ 출석 기록이 없으면 기본값 '미등록' 설정
		        COALESCE(a.created_at, NULL) AS created_at, 
		        COALESCE(a.updated_at, NULL) AS updated_at
		    FROM Student s
		    LEFT JOIN Attendance a 
		        ON s.student_id = a.student_id 
		        AND a.class_id = #{classId} 
		        AND a.date = #{date}
		    JOIN Class c ON c.class_id = #{classId}
		    WHERE s.class_id = #{classId}
		""")
		List<Attendance> findAttendanceByClassAndDate(@Param("classId") int classId, @Param("date") String date);

    @Insert("""
        INSERT INTO Attendance (student_id, class_id, date, state, created_at, updated_at)
        VALUES (#{studentId}, #{classId}, #{date}, #{state}, NOW(), NOW())
    """)
    void insertAttendance(@Param("studentId") String studentId, @Param("classId") int classId, @Param("date") String date, @Param("state") String state);

    @Update("""
        UPDATE Attendance 
        SET state = #{state}, updated_at = NOW()
        WHERE attendance_id = #{attendanceId}
    """)
    void updateAttendanceState(@Param("attendanceId") int attendanceId, @Param("state") String state);

    @Update("""
        UPDATE Attendance 
        SET reason = #{reason}, updated_at = NOW()
        WHERE attendance_id = #{attendanceId}
    """)
    void updateAttendanceReason(@Param("attendanceId") int attendanceId, @Param("reason") String reason);

    @Delete("""
        DELETE FROM Attendance WHERE attendance_id = #{attendanceId}
    """)
    void deleteAttendance(@Param("attendanceId") int attendanceId);

    @Select("""
        SELECT COUNT(*) FROM Attendance 
        WHERE student_id = #{studentId} AND class_id = #{classId} AND date = #{date}
    """)
    int checkDuplicateAttendance(@Param("studentId") String studentId, @Param("classId") int classId, @Param("date") String date);
}
