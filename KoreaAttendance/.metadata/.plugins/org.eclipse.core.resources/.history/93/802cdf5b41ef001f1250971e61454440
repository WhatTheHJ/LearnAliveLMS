package com.korea.attendance.service;

import com.korea.attendance.model.Attendance;
import com.korea.attendance.repository.AttendanceMapper;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class AttendanceService {

    private final AttendanceMapper attendanceMapper;

    public AttendanceService(AttendanceMapper attendanceMapper) {
        this.attendanceMapper = attendanceMapper;
    }

    public void addOrUpdateAttendance(Attendance attendance) {
        // ✅ 기존 출석 기록이 있는지 확인
        Attendance existingAttendance = attendanceMapper.findExistingAttendance(
            attendance.getStudentId(), attendance.getClassId(), attendance.getDate()
        );

        if (existingAttendance == null) {
            // ✅ 기존 출석 기록이 없으면 새로운 출석 기록 추가
            attendanceMapper.insertAttendance(attendance);
        } else {
            // ✅ 기존 출석 기록이 있으면 상태만 업데이트
            attendanceMapper.updateAttendanceState(existingAttendance.getAttendanceId(), attendance.getState());
        }
    }

    
    // ✅ 특정 강의실(classId)의 특정 날짜(date) 출석 기록 조회
    public List<Attendance> getAttendanceByClassAndDate(int classId, String date) {
        return attendanceMapper.findAttendanceByClassAndDate(classId, date);
    }

    // 출석 상태(state) 업데이트
    public void updateAttendanceState(int attendanceId, String state) {
        attendanceMapper.updateAttendanceState(attendanceId, state);
    }

    // 출석 사유(reason) 업데이트
    public void updateAttendanceReason(Integer attendanceId, String newReason) {
        attendanceMapper.updateAttendanceReason(attendanceId, newReason);
    }

    // 출석 기록 삭제
    public void deleteAttendance(int attendanceId) {
        attendanceMapper.deleteAttendance(attendanceId);
    }
}
